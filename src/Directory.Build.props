<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Latest" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <TargetsWindows Condition="'$(OS)' == 'Windows_NT' AND '$(OSGroup)' == ''">true</TargetsWindows>
    <TargetsWindows Condition="'$(OS)' != 'Windows_NT' AND '$(OSGroup)' == ''">false</TargetsWindows>
    <TargetsWindows Condition="'$(OSGroup)' == 'Windows_NT'">true</TargetsWindows>
    <TargetsUnix Condition="'$(OS)' == 'Unix' AND '$(OSGroup)' == ''">true</TargetsUnix>
    <TargetsUnix Condition="'$(OS)' != 'Unix' AND '$(OSGroup)' == ''">false</TargetsUnix>
    <TargetsUnix Condition="'$(OSGroup)' == 'Unix'">true</TargetsUnix>
    <TargetsAnyOS Condition="'$(OSGroup)' == 'AnyOS'">true</TargetsAnyOS>
    <IsSourceProject Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(MSBuildProjectDirectory), 'src%24'))">true</IsSourceProject>
    <!--
      "ReferenceType" property supports below options:

      "Project" => Build and run tests with Microsoft.Data.SqlClient as Project Reference
      "Package" => Build and run tests with Microsoft.Data.SqlClient as Package Reference with configured "TestMicrosoftDataSqlClientVersion" in "Versions.props" file.
      "NetStandard" => Build and run tests with Microsoft.Data.SqlClient as Project Reference via .NET Standard Library
      "NetStandardPackage" => Build and run tests with Microsoft.Data.SqlClient as Package Reference via .NET Standard Library

      ************** IMPORTANT NOTE BEFORE PROCEEDING WITH "PACKAGE" AND "NETSTANDARDPACKAGE" REFERENCE TYPES ***************
      CREATE A NUGET PACKAGE WITH BELOW COMMAND AND ADD TO LOCAL FOLDER + UPDATE NUGET CONFIG FILE TO READ FROM THAT LOCATION 
      > msbuild /p:configuration=Release
    -->
    <ReferenceType Condition="$(ReferenceType) == ''">Project</ReferenceType>
  </PropertyGroup>
  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>
    <RepoRoot>$(ProjectDir)..\</RepoRoot>
    <Artifacts>$(RepoRoot)artifacts\$(ReferenceType)\</Artifacts>
    <ManagedSourceCode>$(ProjectDir)Microsoft.Data.SqlClient\</ManagedSourceCode>
    <NetCoreSource>$(ManagedSourceCode)netcore\</NetCoreSource>
    <NetFxSource>$(ManagedSourceCode)netfx\</NetFxSource>
    <NetFxResources>$(ManagedSourceCode)netfx\src\Resources\</NetFxResources>
    <EncryptionSDK>$(ProjectDir)Microsoft.Data.Encryption\</EncryptionSDK>
    <AddOnsPath>$(ManagedSourceCode)add-ons\</AddOnsPath>
    <ObjFolder>$(Artifacts)obj\</ObjFolder>
    <CommonPath>$(NetCoreSource)src\Common\src</CommonPath>
    <CommonTestPath>$(NetCoreSource)src\Common\tests</CommonTestPath>
    <TestsPath>$(ProjectDir)Microsoft.Data.SqlClient\tests\</TestsPath>
    <BinFolder Condition="'$(TargetsWindows)' == 'true'">$(Artifacts)bin\Windows_NT\</BinFolder>
    <BinFolder Condition="'$(TargetsAnyOS)' == 'true'">$(Artifacts)bin\AnyOS\</BinFolder>
    <BinFolder Condition="'$(TargetsUnix)' == 'true'">$(Artifacts)bin\Unix\</BinFolder>
    <ToolsDir Condition="'$(ToolsDir)'==''">$(RepoRoot)tools\</ToolsDir>
    <PackagesDir Condition="'$(PackagesDir)'==''">$(RepoRoot)packages\</PackagesDir>
    <NuGetRoot Condition="'$(NuGetRoot)' == ''">$(RepoRoot).nuget\</NuGetRoot>
    <NuGetCmd>$(NuGetRoot)nuget.exe</NuGetCmd>
    <!-- Respect environment variable for the .NET install directory if set; otherwise, use the current default location -->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <BuildSimulator Condition="'$(BuildSimulator)' != 'true'">false</BuildSimulator>
  </PropertyGroup>
  <PropertyGroup Condition="'$(BuildSimulator)' == 'true'">
    <DefineConstants>$(DefineConstants);ENCLAVE_SIMULATOR</DefineConstants>
  </PropertyGroup>

  <!-- Provides Version properties -->
  <Import Project="$(ToolsDir)props\Versions.props" />
  <!-- Provides Tool properties -->
  <Import Project="$(ToolsDir)props\Tools.props" />
  <!-- Provides Build properties -->
  <Import Project="$(ToolsDir)props\AssemblyInfo.props" /> 
  <Import Project="$(ToolsDir)props\AssemblyRef.props" />  
</Project>
